#! /usr/bin/env zsh

autoload colors
colors

autoload -Uz vcs_info

for COLOR in RED GREEN BLUE YELLOW WHITE BLACK CYAN; do
    eval PR_$COLOR='%{$fg[${(L)COLOR}]%}'
    eval PR_BRIGHT_$COLOR='%{$fg_bold[${(L)COLOR}]%}'
done
PR_RST="%{${reset_color}%}"
PR_RESET="%{%b%s%u$reset_color%}"

FMT_BRANCH="${PR_YELLOW}*%b${PR_RST}"  # git branch (master ?)
FMT_ACTION="(${PR_CYAN}%a${PR_RST}%)"    # git action (rebase ?)

zstyle ':vcs_info:*:prompt:*' actionformats      "${FMT_BRANCH} ${FMT_ACTION} "
zstyle ':vcs_info:*:prompt:*' formats            "${FMT_BRANCH} "


function lprompt {
    local end_char=$1
    local color1=$2
    local color2=$3

    local bracket_close="${color1}${end_char}${PR_RESET}"

    local cwd="${color2}%1~"
    local host="${color1}%1m${PR_RESET}"
    local git='$vcs_info_msg_0_'

    PROMPT="${host}: ${cwd} ${git}${bracket_close}${PR_RESET} "
}

if [ $UID -eq 0 ]; then
    lprompt '#' $PR_RED $PR_RED
else
    lprompt '>' $PR_GREEN $PR_RED
fi

PR_GIT_UPDATE=1

function zsh_git_prompt_preexec {
    case "$(history $HISTCMD)" in
        *git*)
            PR_GIT_UPDATE=1
            ;;
    esac
}
preexec_functions+='zsh_git_prompt_preexec'

function zsh_git_prompt_chpwd {
    PR_GIT_UPDATE=1
}
chpwd_functions+='zsh_git_prompt_chpwd'

function zsh_git_prompt_precmd {
    if [[ -n "$PR_GIT_UPDATE" ]] ; then
        vcs_info 'prompt'
        PR_GIT_UPDATE=
    fi
}
precmd_functions+='zsh_git_prompt_precmd'
